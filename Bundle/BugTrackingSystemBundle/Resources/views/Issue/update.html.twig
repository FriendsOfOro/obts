{% extends 'OroUIBundle:actions:update.html.twig' %}
{% form_theme form with ['OroTagBundle:Form:fields.html.twig'] %}

{% oro_title_set({params : {"%entityCode%": entity.code, "%entityName%": 'oro.bugtrackingsystem.issue.entity_label'|trans }}) %}
{% set entityId = entity.id %}

{% block navButtons %}
    {% if resource_granted('DELETE', entity) %}
        {% set idButton = 'btn-remove-issue' %}
        {{ UI.button({
            'path':  path('oro_bug_tracking_system_api_delete_issue', {'id': entity.id}),
            'aCss':  'no-hash',
            'iCss':  'icon-trash',
            'id':    idButton,
            'label': 'oro.ui.delete'|trans,
            'title': 'oro.ui.delete'|trans ~ ' ' ~ 'oro.bugtrackingsystem.issue.entity_label'|trans,
        }) }}
        <script type="text/javascript">
            require(['jquery', 'orobugtrackingsystem/js/issue-deletion-handler', 'oroui/js/mediator'],
                    function($, issueDeletionHandler, mediator) {
                        $('#{{ idButton }}').on('click', function(e) {
                            e.preventDefault();
                            var el = $(this);
                            el.on('issue_deletion_success', function() {
                                mediator.once('page:afterChange', function() {
                                    mediator.execute('showFlashMessage', 'success', 'Issue deleted');
                                });
                                mediator.execute(
                                        'redirectTo',
                                        {url: '{{ path('oro_bug_tracking_system_issue_index') }}' }
                                );
                            });
                            issueDeletionHandler.call(el, el.prop('href'), {{ entity.getChildren()|length }});
                        });
                    });
        </script>
    {% endif %}
    {{ UI.buttonSeparator() }}

    {% set html = UI.saveAndCloseButton() %}
    {% if resource_granted('oro_bug_tracking_system_issue_update') %}
        {% set html = html ~ UI.saveAndStayButton() %}
    {% endif %}
    {{ UI.dropdownSaveButton({'html': html}) }}
    {{ UI.cancelButton(path('oro_bug_tracking_system_issue_index')) }}
{% endblock navButtons %}

{% block pageHeader %}
    {% if entityId %}
        {% set breadcrumbs = {
            'entity': entity,
            'indexPath': path('oro_bug_tracking_system_issue_index'),
            'indexLabel': 'oro.bugtrackingsystem.issue.entity_plural_label'|trans,
            'entityTitle': entity.code
        } %}
        {{ parent() }}
    {% else %}
        {% set title = 'oro.ui.create_entity'|trans({'%entityName%': 'oro.bugtrackingsystem.issue.entity_label'|trans}) %}
        {% include 'OroUIBundle::page_title_block.html.twig' with { title: title } %}
    {% endif %}
{% endblock pageHeader %}

{% block content_data %}
    {% set id = 'issue-form' %}

    {% set dataBlocks = [{
        'title': 'General Information'|trans,
        'class': 'active',
        'subblocks': [
            {
                'title': '',
                'data': [
                    form_row(form.summary),
                    (entity.parent or entity.isSubTask()) ? '' : form_row(form.issueType),
                    form_row(form.issuePriority),
                    form.owner is defined ? form_row(form.owner) : '',
                    form_row(form.description)
                ]
            },
            {
                'title': '',
                'data': [
                    form_row(form.tags)
                ]
            }
        ]
    }] %}

    {% set additionalData = [] %}
    {% for child in form.children if child.vars.extra_field is defined and child.vars.extra_field %}
        {% set additionalData = additionalData|merge([form_row(child)]) %}
    {% endfor %}
    {% if additionalData is not empty %}
        {% set dataBlocks = dataBlocks|merge([{
            'title': 'Additional'|trans,
            'subblocks': [{
                'title': '',
                'useSpan': false,
                'data' : additionalData
            }]
        }] ) %}
    {% endif %}

    {% set data = {
        'formErrors': form_errors(form) ? form_errors(form) : null,
        'dataBlocks': dataBlocks,
    } %}
    {{ parent() }}
{% endblock content_data %}
